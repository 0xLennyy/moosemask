// source: data.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var channel_pb = require('./channel_pb.js');
goog.object.extend(proto, channel_pb);
var clock_pb = require('./clock_pb.js');
goog.object.extend(proto, clock_pb);
var keys_pb = require('./keys_pb.js');
goog.object.extend(proto, keys_pb);
var node_pb = require('./node_pb.js');
goog.object.extend(proto, node_pb);
goog.exportSymbol('proto.quilibrium.node.data.pb.ChallengeProofRequest', null, global);
goog.exportSymbol('proto.quilibrium.node.data.pb.ChallengeProofResponse', null, global);
goog.exportSymbol('proto.quilibrium.node.data.pb.DataCompressedSync', null, global);
goog.exportSymbol('proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage', null, global);
goog.exportSymbol('proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.SyncMessageCase', null, global);
goog.exportSymbol('proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage', null, global);
goog.exportSymbol('proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.SyncMessageCase', null, global);
goog.exportSymbol('proto.quilibrium.node.data.pb.DataFrameResponse', null, global);
goog.exportSymbol('proto.quilibrium.node.data.pb.DataPeer', null, global);
goog.exportSymbol('proto.quilibrium.node.data.pb.DataPeerListAnnounce', null, global);
goog.exportSymbol('proto.quilibrium.node.data.pb.FrameRebroadcast', null, global);
goog.exportSymbol('proto.quilibrium.node.data.pb.GetDataFrameRequest', null, global);
goog.exportSymbol('proto.quilibrium.node.data.pb.InclusionCommitmentsMap', null, global);
goog.exportSymbol('proto.quilibrium.node.data.pb.InclusionProofsMap', null, global);
goog.exportSymbol('proto.quilibrium.node.data.pb.InclusionSegmentsMap', null, global);
goog.exportSymbol('proto.quilibrium.node.data.pb.PreMidnightMintResponse', null, global);
goog.exportSymbol('proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest', null, global);
goog.exportSymbol('proto.quilibrium.node.data.pb.SyncRequestAuthentication', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quilibrium.node.data.pb.DataPeerListAnnounce = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quilibrium.node.data.pb.DataPeerListAnnounce.repeatedFields_, null);
};
goog.inherits(proto.quilibrium.node.data.pb.DataPeerListAnnounce, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quilibrium.node.data.pb.DataPeerListAnnounce.displayName = 'proto.quilibrium.node.data.pb.DataPeerListAnnounce';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quilibrium.node.data.pb.DataPeer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quilibrium.node.data.pb.DataPeer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quilibrium.node.data.pb.DataPeer.displayName = 'proto.quilibrium.node.data.pb.DataPeer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quilibrium.node.data.pb.DataCompressedSync = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quilibrium.node.data.pb.DataCompressedSync.repeatedFields_, null);
};
goog.inherits(proto.quilibrium.node.data.pb.DataCompressedSync, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quilibrium.node.data.pb.DataCompressedSync.displayName = 'proto.quilibrium.node.data.pb.DataCompressedSync';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quilibrium.node.data.pb.SyncRequestAuthentication = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quilibrium.node.data.pb.SyncRequestAuthentication, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quilibrium.node.data.pb.SyncRequestAuthentication.displayName = 'proto.quilibrium.node.data.pb.SyncRequestAuthentication';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.oneofGroups_);
};
goog.inherits(proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.displayName = 'proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.oneofGroups_);
};
goog.inherits(proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.displayName = 'proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quilibrium.node.data.pb.InclusionProofsMap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quilibrium.node.data.pb.InclusionProofsMap.repeatedFields_, null);
};
goog.inherits(proto.quilibrium.node.data.pb.InclusionProofsMap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quilibrium.node.data.pb.InclusionProofsMap.displayName = 'proto.quilibrium.node.data.pb.InclusionProofsMap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quilibrium.node.data.pb.InclusionSegmentsMap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quilibrium.node.data.pb.InclusionSegmentsMap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quilibrium.node.data.pb.InclusionSegmentsMap.displayName = 'proto.quilibrium.node.data.pb.InclusionSegmentsMap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quilibrium.node.data.pb.InclusionCommitmentsMap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quilibrium.node.data.pb.InclusionCommitmentsMap.repeatedFields_, null);
};
goog.inherits(proto.quilibrium.node.data.pb.InclusionCommitmentsMap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quilibrium.node.data.pb.InclusionCommitmentsMap.displayName = 'proto.quilibrium.node.data.pb.InclusionCommitmentsMap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quilibrium.node.data.pb.GetDataFrameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quilibrium.node.data.pb.GetDataFrameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quilibrium.node.data.pb.GetDataFrameRequest.displayName = 'proto.quilibrium.node.data.pb.GetDataFrameRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quilibrium.node.data.pb.DataFrameResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quilibrium.node.data.pb.DataFrameResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quilibrium.node.data.pb.DataFrameResponse.displayName = 'proto.quilibrium.node.data.pb.DataFrameResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quilibrium.node.data.pb.PreMidnightMintResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quilibrium.node.data.pb.PreMidnightMintResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quilibrium.node.data.pb.PreMidnightMintResponse.displayName = 'proto.quilibrium.node.data.pb.PreMidnightMintResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest.displayName = 'proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quilibrium.node.data.pb.FrameRebroadcast = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quilibrium.node.data.pb.FrameRebroadcast.repeatedFields_, null);
};
goog.inherits(proto.quilibrium.node.data.pb.FrameRebroadcast, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quilibrium.node.data.pb.FrameRebroadcast.displayName = 'proto.quilibrium.node.data.pb.FrameRebroadcast';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quilibrium.node.data.pb.ChallengeProofRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quilibrium.node.data.pb.ChallengeProofRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quilibrium.node.data.pb.ChallengeProofRequest.displayName = 'proto.quilibrium.node.data.pb.ChallengeProofRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quilibrium.node.data.pb.ChallengeProofResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quilibrium.node.data.pb.ChallengeProofResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quilibrium.node.data.pb.ChallengeProofResponse.displayName = 'proto.quilibrium.node.data.pb.ChallengeProofResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quilibrium.node.data.pb.DataPeerListAnnounce.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quilibrium.node.data.pb.DataPeerListAnnounce.prototype.toObject = function(opt_includeInstance) {
  return proto.quilibrium.node.data.pb.DataPeerListAnnounce.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quilibrium.node.data.pb.DataPeerListAnnounce} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.DataPeerListAnnounce.toObject = function(includeInstance, msg) {
  var f, obj = {
    peerListList: jspb.Message.toObjectList(msg.getPeerListList(),
    proto.quilibrium.node.data.pb.DataPeer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quilibrium.node.data.pb.DataPeerListAnnounce}
 */
proto.quilibrium.node.data.pb.DataPeerListAnnounce.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quilibrium.node.data.pb.DataPeerListAnnounce;
  return proto.quilibrium.node.data.pb.DataPeerListAnnounce.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quilibrium.node.data.pb.DataPeerListAnnounce} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quilibrium.node.data.pb.DataPeerListAnnounce}
 */
proto.quilibrium.node.data.pb.DataPeerListAnnounce.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quilibrium.node.data.pb.DataPeer;
      reader.readMessage(value,proto.quilibrium.node.data.pb.DataPeer.deserializeBinaryFromReader);
      msg.addPeerList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.DataPeerListAnnounce.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quilibrium.node.data.pb.DataPeerListAnnounce.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quilibrium.node.data.pb.DataPeerListAnnounce} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.DataPeerListAnnounce.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeerListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quilibrium.node.data.pb.DataPeer.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DataPeer peer_list = 1;
 * @return {!Array<!proto.quilibrium.node.data.pb.DataPeer>}
 */
proto.quilibrium.node.data.pb.DataPeerListAnnounce.prototype.getPeerListList = function() {
  return /** @type{!Array<!proto.quilibrium.node.data.pb.DataPeer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quilibrium.node.data.pb.DataPeer, 1));
};


/**
 * @param {!Array<!proto.quilibrium.node.data.pb.DataPeer>} value
 * @return {!proto.quilibrium.node.data.pb.DataPeerListAnnounce} returns this
*/
proto.quilibrium.node.data.pb.DataPeerListAnnounce.prototype.setPeerListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quilibrium.node.data.pb.DataPeer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quilibrium.node.data.pb.DataPeer}
 */
proto.quilibrium.node.data.pb.DataPeerListAnnounce.prototype.addPeerList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quilibrium.node.data.pb.DataPeer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quilibrium.node.data.pb.DataPeerListAnnounce} returns this
 */
proto.quilibrium.node.data.pb.DataPeerListAnnounce.prototype.clearPeerListList = function() {
  return this.setPeerListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.toObject = function(opt_includeInstance) {
  return proto.quilibrium.node.data.pb.DataPeer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quilibrium.node.data.pb.DataPeer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.DataPeer.toObject = function(includeInstance, msg) {
  var f, obj = {
    peerId: msg.getPeerId_asB64(),
    multiaddr: jspb.Message.getFieldWithDefault(msg, 2, ""),
    maxFrame: jspb.Message.getFieldWithDefault(msg, 3, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 4, 0),
    version: msg.getVersion_asB64(),
    signature: msg.getSignature_asB64(),
    publicKey: msg.getPublicKey_asB64(),
    totalDistance: msg.getTotalDistance_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quilibrium.node.data.pb.DataPeer}
 */
proto.quilibrium.node.data.pb.DataPeer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quilibrium.node.data.pb.DataPeer;
  return proto.quilibrium.node.data.pb.DataPeer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quilibrium.node.data.pb.DataPeer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quilibrium.node.data.pb.DataPeer}
 */
proto.quilibrium.node.data.pb.DataPeer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPeerId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMultiaddr(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxFrame(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setVersion(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPublicKey(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTotalDistance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quilibrium.node.data.pb.DataPeer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quilibrium.node.data.pb.DataPeer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.DataPeer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeerId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getMultiaddr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMaxFrame();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getVersion_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getPublicKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getTotalDistance_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      8,
      f
    );
  }
};


/**
 * optional bytes peer_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.getPeerId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes peer_id = 1;
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {string}
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.getPeerId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPeerId()));
};


/**
 * optional bytes peer_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.getPeerId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPeerId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.data.pb.DataPeer} returns this
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.setPeerId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string multiaddr = 2;
 * @return {string}
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.getMultiaddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.quilibrium.node.data.pb.DataPeer} returns this
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.setMultiaddr = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 max_frame = 3;
 * @return {number}
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.getMaxFrame = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.quilibrium.node.data.pb.DataPeer} returns this
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.setMaxFrame = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 timestamp = 4;
 * @return {number}
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.quilibrium.node.data.pb.DataPeer} returns this
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bytes version = 5;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.getVersion = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes version = 5;
 * This is a type-conversion wrapper around `getVersion()`
 * @return {string}
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.getVersion_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getVersion()));
};


/**
 * optional bytes version = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getVersion()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.getVersion_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getVersion()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.data.pb.DataPeer} returns this
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.setVersion = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional bytes signature = 6;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes signature = 6;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.data.pb.DataPeer} returns this
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional bytes public_key = 7;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.getPublicKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes public_key = 7;
 * This is a type-conversion wrapper around `getPublicKey()`
 * @return {string}
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.getPublicKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPublicKey()));
};


/**
 * optional bytes public_key = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPublicKey()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.getPublicKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPublicKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.data.pb.DataPeer} returns this
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.setPublicKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};


/**
 * optional bytes total_distance = 8;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.getTotalDistance = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes total_distance = 8;
 * This is a type-conversion wrapper around `getTotalDistance()`
 * @return {string}
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.getTotalDistance_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTotalDistance()));
};


/**
 * optional bytes total_distance = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTotalDistance()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.getTotalDistance_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTotalDistance()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.data.pb.DataPeer} returns this
 */
proto.quilibrium.node.data.pb.DataPeer.prototype.setTotalDistance = function(value) {
  return jspb.Message.setProto3BytesField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quilibrium.node.data.pb.DataCompressedSync.repeatedFields_ = [3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quilibrium.node.data.pb.DataCompressedSync.prototype.toObject = function(opt_includeInstance) {
  return proto.quilibrium.node.data.pb.DataCompressedSync.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quilibrium.node.data.pb.DataCompressedSync} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.DataCompressedSync.toObject = function(includeInstance, msg) {
  var f, obj = {
    fromFrameNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    toFrameNumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    truncatedClockFramesList: jspb.Message.toObjectList(msg.getTruncatedClockFramesList(),
    clock_pb.ClockFrame.toObject, includeInstance),
    proofsList: jspb.Message.toObjectList(msg.getProofsList(),
    proto.quilibrium.node.data.pb.InclusionProofsMap.toObject, includeInstance),
    segmentsList: jspb.Message.toObjectList(msg.getSegmentsList(),
    proto.quilibrium.node.data.pb.InclusionSegmentsMap.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSync}
 */
proto.quilibrium.node.data.pb.DataCompressedSync.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quilibrium.node.data.pb.DataCompressedSync;
  return proto.quilibrium.node.data.pb.DataCompressedSync.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quilibrium.node.data.pb.DataCompressedSync} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSync}
 */
proto.quilibrium.node.data.pb.DataCompressedSync.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFromFrameNumber(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setToFrameNumber(value);
      break;
    case 3:
      var value = new clock_pb.ClockFrame;
      reader.readMessage(value,clock_pb.ClockFrame.deserializeBinaryFromReader);
      msg.addTruncatedClockFrames(value);
      break;
    case 4:
      var value = new proto.quilibrium.node.data.pb.InclusionProofsMap;
      reader.readMessage(value,proto.quilibrium.node.data.pb.InclusionProofsMap.deserializeBinaryFromReader);
      msg.addProofs(value);
      break;
    case 5:
      var value = new proto.quilibrium.node.data.pb.InclusionSegmentsMap;
      reader.readMessage(value,proto.quilibrium.node.data.pb.InclusionSegmentsMap.deserializeBinaryFromReader);
      msg.addSegments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.DataCompressedSync.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quilibrium.node.data.pb.DataCompressedSync.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quilibrium.node.data.pb.DataCompressedSync} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.DataCompressedSync.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFromFrameNumber();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getToFrameNumber();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTruncatedClockFramesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      clock_pb.ClockFrame.serializeBinaryToWriter
    );
  }
  f = message.getProofsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.quilibrium.node.data.pb.InclusionProofsMap.serializeBinaryToWriter
    );
  }
  f = message.getSegmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.quilibrium.node.data.pb.InclusionSegmentsMap.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 from_frame_number = 1;
 * @return {number}
 */
proto.quilibrium.node.data.pb.DataCompressedSync.prototype.getFromFrameNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSync} returns this
 */
proto.quilibrium.node.data.pb.DataCompressedSync.prototype.setFromFrameNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 to_frame_number = 2;
 * @return {number}
 */
proto.quilibrium.node.data.pb.DataCompressedSync.prototype.getToFrameNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSync} returns this
 */
proto.quilibrium.node.data.pb.DataCompressedSync.prototype.setToFrameNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated quilibrium.node.clock.pb.ClockFrame truncated_clock_frames = 3;
 * @return {!Array<!proto.quilibrium.node.clock.pb.ClockFrame>}
 */
proto.quilibrium.node.data.pb.DataCompressedSync.prototype.getTruncatedClockFramesList = function() {
  return /** @type{!Array<!proto.quilibrium.node.clock.pb.ClockFrame>} */ (
    jspb.Message.getRepeatedWrapperField(this, clock_pb.ClockFrame, 3));
};


/**
 * @param {!Array<!proto.quilibrium.node.clock.pb.ClockFrame>} value
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSync} returns this
*/
proto.quilibrium.node.data.pb.DataCompressedSync.prototype.setTruncatedClockFramesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.quilibrium.node.clock.pb.ClockFrame=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quilibrium.node.clock.pb.ClockFrame}
 */
proto.quilibrium.node.data.pb.DataCompressedSync.prototype.addTruncatedClockFrames = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.quilibrium.node.clock.pb.ClockFrame, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSync} returns this
 */
proto.quilibrium.node.data.pb.DataCompressedSync.prototype.clearTruncatedClockFramesList = function() {
  return this.setTruncatedClockFramesList([]);
};


/**
 * repeated InclusionProofsMap proofs = 4;
 * @return {!Array<!proto.quilibrium.node.data.pb.InclusionProofsMap>}
 */
proto.quilibrium.node.data.pb.DataCompressedSync.prototype.getProofsList = function() {
  return /** @type{!Array<!proto.quilibrium.node.data.pb.InclusionProofsMap>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quilibrium.node.data.pb.InclusionProofsMap, 4));
};


/**
 * @param {!Array<!proto.quilibrium.node.data.pb.InclusionProofsMap>} value
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSync} returns this
*/
proto.quilibrium.node.data.pb.DataCompressedSync.prototype.setProofsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.quilibrium.node.data.pb.InclusionProofsMap=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quilibrium.node.data.pb.InclusionProofsMap}
 */
proto.quilibrium.node.data.pb.DataCompressedSync.prototype.addProofs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.quilibrium.node.data.pb.InclusionProofsMap, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSync} returns this
 */
proto.quilibrium.node.data.pb.DataCompressedSync.prototype.clearProofsList = function() {
  return this.setProofsList([]);
};


/**
 * repeated InclusionSegmentsMap segments = 5;
 * @return {!Array<!proto.quilibrium.node.data.pb.InclusionSegmentsMap>}
 */
proto.quilibrium.node.data.pb.DataCompressedSync.prototype.getSegmentsList = function() {
  return /** @type{!Array<!proto.quilibrium.node.data.pb.InclusionSegmentsMap>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quilibrium.node.data.pb.InclusionSegmentsMap, 5));
};


/**
 * @param {!Array<!proto.quilibrium.node.data.pb.InclusionSegmentsMap>} value
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSync} returns this
*/
proto.quilibrium.node.data.pb.DataCompressedSync.prototype.setSegmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.quilibrium.node.data.pb.InclusionSegmentsMap=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quilibrium.node.data.pb.InclusionSegmentsMap}
 */
proto.quilibrium.node.data.pb.DataCompressedSync.prototype.addSegments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.quilibrium.node.data.pb.InclusionSegmentsMap, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSync} returns this
 */
proto.quilibrium.node.data.pb.DataCompressedSync.prototype.clearSegmentsList = function() {
  return this.setSegmentsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quilibrium.node.data.pb.SyncRequestAuthentication.prototype.toObject = function(opt_includeInstance) {
  return proto.quilibrium.node.data.pb.SyncRequestAuthentication.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quilibrium.node.data.pb.SyncRequestAuthentication} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.SyncRequestAuthentication.toObject = function(includeInstance, msg) {
  var f, obj = {
    peerId: msg.getPeerId_asB64(),
    challenge: msg.getChallenge_asB64(),
    response: (f = msg.getResponse()) && keys_pb.Ed448Signature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quilibrium.node.data.pb.SyncRequestAuthentication}
 */
proto.quilibrium.node.data.pb.SyncRequestAuthentication.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quilibrium.node.data.pb.SyncRequestAuthentication;
  return proto.quilibrium.node.data.pb.SyncRequestAuthentication.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quilibrium.node.data.pb.SyncRequestAuthentication} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quilibrium.node.data.pb.SyncRequestAuthentication}
 */
proto.quilibrium.node.data.pb.SyncRequestAuthentication.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPeerId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChallenge(value);
      break;
    case 3:
      var value = new keys_pb.Ed448Signature;
      reader.readMessage(value,keys_pb.Ed448Signature.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.SyncRequestAuthentication.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quilibrium.node.data.pb.SyncRequestAuthentication.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quilibrium.node.data.pb.SyncRequestAuthentication} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.SyncRequestAuthentication.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeerId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getChallenge_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      keys_pb.Ed448Signature.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes peer_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.data.pb.SyncRequestAuthentication.prototype.getPeerId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes peer_id = 1;
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {string}
 */
proto.quilibrium.node.data.pb.SyncRequestAuthentication.prototype.getPeerId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPeerId()));
};


/**
 * optional bytes peer_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.SyncRequestAuthentication.prototype.getPeerId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPeerId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.data.pb.SyncRequestAuthentication} returns this
 */
proto.quilibrium.node.data.pb.SyncRequestAuthentication.prototype.setPeerId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes challenge = 2;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.data.pb.SyncRequestAuthentication.prototype.getChallenge = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes challenge = 2;
 * This is a type-conversion wrapper around `getChallenge()`
 * @return {string}
 */
proto.quilibrium.node.data.pb.SyncRequestAuthentication.prototype.getChallenge_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChallenge()));
};


/**
 * optional bytes challenge = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChallenge()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.SyncRequestAuthentication.prototype.getChallenge_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChallenge()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.data.pb.SyncRequestAuthentication} returns this
 */
proto.quilibrium.node.data.pb.SyncRequestAuthentication.prototype.setChallenge = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional quilibrium.node.keys.pb.Ed448Signature response = 3;
 * @return {?proto.quilibrium.node.keys.pb.Ed448Signature}
 */
proto.quilibrium.node.data.pb.SyncRequestAuthentication.prototype.getResponse = function() {
  return /** @type{?proto.quilibrium.node.keys.pb.Ed448Signature} */ (
    jspb.Message.getWrapperField(this, keys_pb.Ed448Signature, 3));
};


/**
 * @param {?proto.quilibrium.node.keys.pb.Ed448Signature|undefined} value
 * @return {!proto.quilibrium.node.data.pb.SyncRequestAuthentication} returns this
*/
proto.quilibrium.node.data.pb.SyncRequestAuthentication.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quilibrium.node.data.pb.SyncRequestAuthentication} returns this
 */
proto.quilibrium.node.data.pb.SyncRequestAuthentication.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quilibrium.node.data.pb.SyncRequestAuthentication.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.SyncMessageCase = {
  SYNC_MESSAGE_NOT_SET: 0,
  PREFLIGHT: 1,
  REQUEST: 2,
  AUTHENTICATION: 3
};

/**
 * @return {proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.SyncMessageCase}
 */
proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.prototype.getSyncMessageCase = function() {
  return /** @type {proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.SyncMessageCase} */(jspb.Message.computeOneofCase(this, proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    preflight: (f = msg.getPreflight()) && clock_pb.ClockFramesPreflight.toObject(includeInstance, f),
    request: (f = msg.getRequest()) && clock_pb.ClockFramesRequest.toObject(includeInstance, f),
    authentication: (f = msg.getAuthentication()) && proto.quilibrium.node.data.pb.SyncRequestAuthentication.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage}
 */
proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage;
  return proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage}
 */
proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new clock_pb.ClockFramesPreflight;
      reader.readMessage(value,clock_pb.ClockFramesPreflight.deserializeBinaryFromReader);
      msg.setPreflight(value);
      break;
    case 2:
      var value = new clock_pb.ClockFramesRequest;
      reader.readMessage(value,clock_pb.ClockFramesRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 3:
      var value = new proto.quilibrium.node.data.pb.SyncRequestAuthentication;
      reader.readMessage(value,proto.quilibrium.node.data.pb.SyncRequestAuthentication.deserializeBinaryFromReader);
      msg.setAuthentication(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPreflight();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      clock_pb.ClockFramesPreflight.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      clock_pb.ClockFramesRequest.serializeBinaryToWriter
    );
  }
  f = message.getAuthentication();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.quilibrium.node.data.pb.SyncRequestAuthentication.serializeBinaryToWriter
    );
  }
};


/**
 * optional quilibrium.node.clock.pb.ClockFramesPreflight preflight = 1;
 * @return {?proto.quilibrium.node.clock.pb.ClockFramesPreflight}
 */
proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.prototype.getPreflight = function() {
  return /** @type{?proto.quilibrium.node.clock.pb.ClockFramesPreflight} */ (
    jspb.Message.getWrapperField(this, clock_pb.ClockFramesPreflight, 1));
};


/**
 * @param {?proto.quilibrium.node.clock.pb.ClockFramesPreflight|undefined} value
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage} returns this
*/
proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.prototype.setPreflight = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage} returns this
 */
proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.prototype.clearPreflight = function() {
  return this.setPreflight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.prototype.hasPreflight = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional quilibrium.node.clock.pb.ClockFramesRequest request = 2;
 * @return {?proto.quilibrium.node.clock.pb.ClockFramesRequest}
 */
proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.prototype.getRequest = function() {
  return /** @type{?proto.quilibrium.node.clock.pb.ClockFramesRequest} */ (
    jspb.Message.getWrapperField(this, clock_pb.ClockFramesRequest, 2));
};


/**
 * @param {?proto.quilibrium.node.clock.pb.ClockFramesRequest|undefined} value
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage} returns this
*/
proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.prototype.setRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage} returns this
 */
proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SyncRequestAuthentication authentication = 3;
 * @return {?proto.quilibrium.node.data.pb.SyncRequestAuthentication}
 */
proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.prototype.getAuthentication = function() {
  return /** @type{?proto.quilibrium.node.data.pb.SyncRequestAuthentication} */ (
    jspb.Message.getWrapperField(this, proto.quilibrium.node.data.pb.SyncRequestAuthentication, 3));
};


/**
 * @param {?proto.quilibrium.node.data.pb.SyncRequestAuthentication|undefined} value
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage} returns this
*/
proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.prototype.setAuthentication = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage} returns this
 */
proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.prototype.clearAuthentication = function() {
  return this.setAuthentication(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quilibrium.node.data.pb.DataCompressedSyncRequestMessage.prototype.hasAuthentication = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.SyncMessageCase = {
  SYNC_MESSAGE_NOT_SET: 0,
  PREFLIGHT: 1,
  RESPONSE: 2
};

/**
 * @return {proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.SyncMessageCase}
 */
proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.prototype.getSyncMessageCase = function() {
  return /** @type {proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.SyncMessageCase} */(jspb.Message.computeOneofCase(this, proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    preflight: (f = msg.getPreflight()) && clock_pb.ClockFramesPreflight.toObject(includeInstance, f),
    response: (f = msg.getResponse()) && proto.quilibrium.node.data.pb.DataCompressedSync.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage}
 */
proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage;
  return proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage}
 */
proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new clock_pb.ClockFramesPreflight;
      reader.readMessage(value,clock_pb.ClockFramesPreflight.deserializeBinaryFromReader);
      msg.setPreflight(value);
      break;
    case 2:
      var value = new proto.quilibrium.node.data.pb.DataCompressedSync;
      reader.readMessage(value,proto.quilibrium.node.data.pb.DataCompressedSync.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPreflight();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      clock_pb.ClockFramesPreflight.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.quilibrium.node.data.pb.DataCompressedSync.serializeBinaryToWriter
    );
  }
};


/**
 * optional quilibrium.node.clock.pb.ClockFramesPreflight preflight = 1;
 * @return {?proto.quilibrium.node.clock.pb.ClockFramesPreflight}
 */
proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.prototype.getPreflight = function() {
  return /** @type{?proto.quilibrium.node.clock.pb.ClockFramesPreflight} */ (
    jspb.Message.getWrapperField(this, clock_pb.ClockFramesPreflight, 1));
};


/**
 * @param {?proto.quilibrium.node.clock.pb.ClockFramesPreflight|undefined} value
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage} returns this
*/
proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.prototype.setPreflight = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage} returns this
 */
proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.prototype.clearPreflight = function() {
  return this.setPreflight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.prototype.hasPreflight = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DataCompressedSync response = 2;
 * @return {?proto.quilibrium.node.data.pb.DataCompressedSync}
 */
proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.prototype.getResponse = function() {
  return /** @type{?proto.quilibrium.node.data.pb.DataCompressedSync} */ (
    jspb.Message.getWrapperField(this, proto.quilibrium.node.data.pb.DataCompressedSync, 2));
};


/**
 * @param {?proto.quilibrium.node.data.pb.DataCompressedSync|undefined} value
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage} returns this
*/
proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.prototype.setResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage} returns this
 */
proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quilibrium.node.data.pb.DataCompressedSyncResponseMessage.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quilibrium.node.data.pb.InclusionProofsMap.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quilibrium.node.data.pb.InclusionProofsMap.prototype.toObject = function(opt_includeInstance) {
  return proto.quilibrium.node.data.pb.InclusionProofsMap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quilibrium.node.data.pb.InclusionProofsMap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.InclusionProofsMap.toObject = function(includeInstance, msg) {
  var f, obj = {
    frameCommit: msg.getFrameCommit_asB64(),
    proof: msg.getProof_asB64(),
    commitmentsList: jspb.Message.toObjectList(msg.getCommitmentsList(),
    proto.quilibrium.node.data.pb.InclusionCommitmentsMap.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quilibrium.node.data.pb.InclusionProofsMap}
 */
proto.quilibrium.node.data.pb.InclusionProofsMap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quilibrium.node.data.pb.InclusionProofsMap;
  return proto.quilibrium.node.data.pb.InclusionProofsMap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quilibrium.node.data.pb.InclusionProofsMap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quilibrium.node.data.pb.InclusionProofsMap}
 */
proto.quilibrium.node.data.pb.InclusionProofsMap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFrameCommit(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProof(value);
      break;
    case 3:
      var value = new proto.quilibrium.node.data.pb.InclusionCommitmentsMap;
      reader.readMessage(value,proto.quilibrium.node.data.pb.InclusionCommitmentsMap.deserializeBinaryFromReader);
      msg.addCommitments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.InclusionProofsMap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quilibrium.node.data.pb.InclusionProofsMap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quilibrium.node.data.pb.InclusionProofsMap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.InclusionProofsMap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrameCommit_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getProof_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getCommitmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.quilibrium.node.data.pb.InclusionCommitmentsMap.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes frame_commit = 1;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.data.pb.InclusionProofsMap.prototype.getFrameCommit = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes frame_commit = 1;
 * This is a type-conversion wrapper around `getFrameCommit()`
 * @return {string}
 */
proto.quilibrium.node.data.pb.InclusionProofsMap.prototype.getFrameCommit_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFrameCommit()));
};


/**
 * optional bytes frame_commit = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFrameCommit()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.InclusionProofsMap.prototype.getFrameCommit_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFrameCommit()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.data.pb.InclusionProofsMap} returns this
 */
proto.quilibrium.node.data.pb.InclusionProofsMap.prototype.setFrameCommit = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes proof = 2;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.data.pb.InclusionProofsMap.prototype.getProof = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes proof = 2;
 * This is a type-conversion wrapper around `getProof()`
 * @return {string}
 */
proto.quilibrium.node.data.pb.InclusionProofsMap.prototype.getProof_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProof()));
};


/**
 * optional bytes proof = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProof()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.InclusionProofsMap.prototype.getProof_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProof()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.data.pb.InclusionProofsMap} returns this
 */
proto.quilibrium.node.data.pb.InclusionProofsMap.prototype.setProof = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * repeated InclusionCommitmentsMap commitments = 3;
 * @return {!Array<!proto.quilibrium.node.data.pb.InclusionCommitmentsMap>}
 */
proto.quilibrium.node.data.pb.InclusionProofsMap.prototype.getCommitmentsList = function() {
  return /** @type{!Array<!proto.quilibrium.node.data.pb.InclusionCommitmentsMap>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quilibrium.node.data.pb.InclusionCommitmentsMap, 3));
};


/**
 * @param {!Array<!proto.quilibrium.node.data.pb.InclusionCommitmentsMap>} value
 * @return {!proto.quilibrium.node.data.pb.InclusionProofsMap} returns this
*/
proto.quilibrium.node.data.pb.InclusionProofsMap.prototype.setCommitmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.quilibrium.node.data.pb.InclusionCommitmentsMap=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quilibrium.node.data.pb.InclusionCommitmentsMap}
 */
proto.quilibrium.node.data.pb.InclusionProofsMap.prototype.addCommitments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.quilibrium.node.data.pb.InclusionCommitmentsMap, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quilibrium.node.data.pb.InclusionProofsMap} returns this
 */
proto.quilibrium.node.data.pb.InclusionProofsMap.prototype.clearCommitmentsList = function() {
  return this.setCommitmentsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quilibrium.node.data.pb.InclusionSegmentsMap.prototype.toObject = function(opt_includeInstance) {
  return proto.quilibrium.node.data.pb.InclusionSegmentsMap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quilibrium.node.data.pb.InclusionSegmentsMap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.InclusionSegmentsMap.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quilibrium.node.data.pb.InclusionSegmentsMap}
 */
proto.quilibrium.node.data.pb.InclusionSegmentsMap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quilibrium.node.data.pb.InclusionSegmentsMap;
  return proto.quilibrium.node.data.pb.InclusionSegmentsMap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quilibrium.node.data.pb.InclusionSegmentsMap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quilibrium.node.data.pb.InclusionSegmentsMap}
 */
proto.quilibrium.node.data.pb.InclusionSegmentsMap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.InclusionSegmentsMap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quilibrium.node.data.pb.InclusionSegmentsMap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quilibrium.node.data.pb.InclusionSegmentsMap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.InclusionSegmentsMap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.data.pb.InclusionSegmentsMap.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.quilibrium.node.data.pb.InclusionSegmentsMap.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.InclusionSegmentsMap.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.data.pb.InclusionSegmentsMap} returns this
 */
proto.quilibrium.node.data.pb.InclusionSegmentsMap.prototype.setHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes data = 2;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.data.pb.InclusionSegmentsMap.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes data = 2;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.quilibrium.node.data.pb.InclusionSegmentsMap.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.InclusionSegmentsMap.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.data.pb.InclusionSegmentsMap} returns this
 */
proto.quilibrium.node.data.pb.InclusionSegmentsMap.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quilibrium.node.data.pb.InclusionCommitmentsMap.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quilibrium.node.data.pb.InclusionCommitmentsMap.prototype.toObject = function(opt_includeInstance) {
  return proto.quilibrium.node.data.pb.InclusionCommitmentsMap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quilibrium.node.data.pb.InclusionCommitmentsMap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.InclusionCommitmentsMap.toObject = function(includeInstance, msg) {
  var f, obj = {
    commitment: msg.getCommitment_asB64(),
    typeUrl: jspb.Message.getFieldWithDefault(msg, 2, ""),
    segmentHashesList: msg.getSegmentHashesList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quilibrium.node.data.pb.InclusionCommitmentsMap}
 */
proto.quilibrium.node.data.pb.InclusionCommitmentsMap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quilibrium.node.data.pb.InclusionCommitmentsMap;
  return proto.quilibrium.node.data.pb.InclusionCommitmentsMap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quilibrium.node.data.pb.InclusionCommitmentsMap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quilibrium.node.data.pb.InclusionCommitmentsMap}
 */
proto.quilibrium.node.data.pb.InclusionCommitmentsMap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCommitment(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTypeUrl(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addSegmentHashes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.InclusionCommitmentsMap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quilibrium.node.data.pb.InclusionCommitmentsMap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quilibrium.node.data.pb.InclusionCommitmentsMap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.InclusionCommitmentsMap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommitment_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getTypeUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSegmentHashesList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
};


/**
 * optional bytes commitment = 1;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.data.pb.InclusionCommitmentsMap.prototype.getCommitment = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes commitment = 1;
 * This is a type-conversion wrapper around `getCommitment()`
 * @return {string}
 */
proto.quilibrium.node.data.pb.InclusionCommitmentsMap.prototype.getCommitment_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCommitment()));
};


/**
 * optional bytes commitment = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCommitment()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.InclusionCommitmentsMap.prototype.getCommitment_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCommitment()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.data.pb.InclusionCommitmentsMap} returns this
 */
proto.quilibrium.node.data.pb.InclusionCommitmentsMap.prototype.setCommitment = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string type_url = 2;
 * @return {string}
 */
proto.quilibrium.node.data.pb.InclusionCommitmentsMap.prototype.getTypeUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.quilibrium.node.data.pb.InclusionCommitmentsMap} returns this
 */
proto.quilibrium.node.data.pb.InclusionCommitmentsMap.prototype.setTypeUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated bytes segment_hashes = 3;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.quilibrium.node.data.pb.InclusionCommitmentsMap.prototype.getSegmentHashesList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes segment_hashes = 3;
 * This is a type-conversion wrapper around `getSegmentHashesList()`
 * @return {!Array<string>}
 */
proto.quilibrium.node.data.pb.InclusionCommitmentsMap.prototype.getSegmentHashesList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getSegmentHashesList()));
};


/**
 * repeated bytes segment_hashes = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSegmentHashesList()`
 * @return {!Array<!Uint8Array>}
 */
proto.quilibrium.node.data.pb.InclusionCommitmentsMap.prototype.getSegmentHashesList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getSegmentHashesList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.quilibrium.node.data.pb.InclusionCommitmentsMap} returns this
 */
proto.quilibrium.node.data.pb.InclusionCommitmentsMap.prototype.setSegmentHashesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.quilibrium.node.data.pb.InclusionCommitmentsMap} returns this
 */
proto.quilibrium.node.data.pb.InclusionCommitmentsMap.prototype.addSegmentHashes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quilibrium.node.data.pb.InclusionCommitmentsMap} returns this
 */
proto.quilibrium.node.data.pb.InclusionCommitmentsMap.prototype.clearSegmentHashesList = function() {
  return this.setSegmentHashesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quilibrium.node.data.pb.GetDataFrameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quilibrium.node.data.pb.GetDataFrameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quilibrium.node.data.pb.GetDataFrameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.GetDataFrameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    frameNumber: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quilibrium.node.data.pb.GetDataFrameRequest}
 */
proto.quilibrium.node.data.pb.GetDataFrameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quilibrium.node.data.pb.GetDataFrameRequest;
  return proto.quilibrium.node.data.pb.GetDataFrameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quilibrium.node.data.pb.GetDataFrameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quilibrium.node.data.pb.GetDataFrameRequest}
 */
proto.quilibrium.node.data.pb.GetDataFrameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFrameNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.GetDataFrameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quilibrium.node.data.pb.GetDataFrameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quilibrium.node.data.pb.GetDataFrameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.GetDataFrameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrameNumber();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 frame_number = 1;
 * @return {number}
 */
proto.quilibrium.node.data.pb.GetDataFrameRequest.prototype.getFrameNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.quilibrium.node.data.pb.GetDataFrameRequest} returns this
 */
proto.quilibrium.node.data.pb.GetDataFrameRequest.prototype.setFrameNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quilibrium.node.data.pb.DataFrameResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quilibrium.node.data.pb.DataFrameResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quilibrium.node.data.pb.DataFrameResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.DataFrameResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    clockFrame: (f = msg.getClockFrame()) && clock_pb.ClockFrame.toObject(includeInstance, f),
    proof: msg.getProof_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quilibrium.node.data.pb.DataFrameResponse}
 */
proto.quilibrium.node.data.pb.DataFrameResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quilibrium.node.data.pb.DataFrameResponse;
  return proto.quilibrium.node.data.pb.DataFrameResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quilibrium.node.data.pb.DataFrameResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quilibrium.node.data.pb.DataFrameResponse}
 */
proto.quilibrium.node.data.pb.DataFrameResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new clock_pb.ClockFrame;
      reader.readMessage(value,clock_pb.ClockFrame.deserializeBinaryFromReader);
      msg.setClockFrame(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProof(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.DataFrameResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quilibrium.node.data.pb.DataFrameResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quilibrium.node.data.pb.DataFrameResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.DataFrameResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClockFrame();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      clock_pb.ClockFrame.serializeBinaryToWriter
    );
  }
  f = message.getProof_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional quilibrium.node.clock.pb.ClockFrame clock_frame = 1;
 * @return {?proto.quilibrium.node.clock.pb.ClockFrame}
 */
proto.quilibrium.node.data.pb.DataFrameResponse.prototype.getClockFrame = function() {
  return /** @type{?proto.quilibrium.node.clock.pb.ClockFrame} */ (
    jspb.Message.getWrapperField(this, clock_pb.ClockFrame, 1));
};


/**
 * @param {?proto.quilibrium.node.clock.pb.ClockFrame|undefined} value
 * @return {!proto.quilibrium.node.data.pb.DataFrameResponse} returns this
*/
proto.quilibrium.node.data.pb.DataFrameResponse.prototype.setClockFrame = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quilibrium.node.data.pb.DataFrameResponse} returns this
 */
proto.quilibrium.node.data.pb.DataFrameResponse.prototype.clearClockFrame = function() {
  return this.setClockFrame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quilibrium.node.data.pb.DataFrameResponse.prototype.hasClockFrame = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes proof = 2;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.data.pb.DataFrameResponse.prototype.getProof = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes proof = 2;
 * This is a type-conversion wrapper around `getProof()`
 * @return {string}
 */
proto.quilibrium.node.data.pb.DataFrameResponse.prototype.getProof_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProof()));
};


/**
 * optional bytes proof = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProof()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.DataFrameResponse.prototype.getProof_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProof()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.data.pb.DataFrameResponse} returns this
 */
proto.quilibrium.node.data.pb.DataFrameResponse.prototype.setProof = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quilibrium.node.data.pb.PreMidnightMintResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quilibrium.node.data.pb.PreMidnightMintResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quilibrium.node.data.pb.PreMidnightMintResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.PreMidnightMintResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: msg.getAddress_asB64(),
    increment: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quilibrium.node.data.pb.PreMidnightMintResponse}
 */
proto.quilibrium.node.data.pb.PreMidnightMintResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quilibrium.node.data.pb.PreMidnightMintResponse;
  return proto.quilibrium.node.data.pb.PreMidnightMintResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quilibrium.node.data.pb.PreMidnightMintResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quilibrium.node.data.pb.PreMidnightMintResponse}
 */
proto.quilibrium.node.data.pb.PreMidnightMintResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIncrement(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.PreMidnightMintResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quilibrium.node.data.pb.PreMidnightMintResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quilibrium.node.data.pb.PreMidnightMintResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.PreMidnightMintResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getIncrement();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional bytes address = 1;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.data.pb.PreMidnightMintResponse.prototype.getAddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes address = 1;
 * This is a type-conversion wrapper around `getAddress()`
 * @return {string}
 */
proto.quilibrium.node.data.pb.PreMidnightMintResponse.prototype.getAddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAddress()));
};


/**
 * optional bytes address = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAddress()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.PreMidnightMintResponse.prototype.getAddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAddress()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.data.pb.PreMidnightMintResponse} returns this
 */
proto.quilibrium.node.data.pb.PreMidnightMintResponse.prototype.setAddress = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 increment = 2;
 * @return {number}
 */
proto.quilibrium.node.data.pb.PreMidnightMintResponse.prototype.getIncrement = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.quilibrium.node.data.pb.PreMidnightMintResponse} returns this
 */
proto.quilibrium.node.data.pb.PreMidnightMintResponse.prototype.setIncrement = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    owner: msg.getOwner_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest}
 */
proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest;
  return proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest}
 */
proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOwner(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOwner_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes owner = 1;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest.prototype.getOwner = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes owner = 1;
 * This is a type-conversion wrapper around `getOwner()`
 * @return {string}
 */
proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest.prototype.getOwner_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOwner()));
};


/**
 * optional bytes owner = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOwner()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest.prototype.getOwner_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOwner()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest} returns this
 */
proto.quilibrium.node.data.pb.PreMidnightMintStatusRequest.prototype.setOwner = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quilibrium.node.data.pb.FrameRebroadcast.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quilibrium.node.data.pb.FrameRebroadcast.prototype.toObject = function(opt_includeInstance) {
  return proto.quilibrium.node.data.pb.FrameRebroadcast.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quilibrium.node.data.pb.FrameRebroadcast} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.FrameRebroadcast.toObject = function(includeInstance, msg) {
  var f, obj = {
    from: jspb.Message.getFieldWithDefault(msg, 1, 0),
    to: jspb.Message.getFieldWithDefault(msg, 2, 0),
    clockFramesList: jspb.Message.toObjectList(msg.getClockFramesList(),
    clock_pb.ClockFrame.toObject, includeInstance),
    random: msg.getRandom_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quilibrium.node.data.pb.FrameRebroadcast}
 */
proto.quilibrium.node.data.pb.FrameRebroadcast.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quilibrium.node.data.pb.FrameRebroadcast;
  return proto.quilibrium.node.data.pb.FrameRebroadcast.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quilibrium.node.data.pb.FrameRebroadcast} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quilibrium.node.data.pb.FrameRebroadcast}
 */
proto.quilibrium.node.data.pb.FrameRebroadcast.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFrom(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTo(value);
      break;
    case 3:
      var value = new clock_pb.ClockFrame;
      reader.readMessage(value,clock_pb.ClockFrame.deserializeBinaryFromReader);
      msg.addClockFrames(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRandom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.FrameRebroadcast.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quilibrium.node.data.pb.FrameRebroadcast.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quilibrium.node.data.pb.FrameRebroadcast} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.FrameRebroadcast.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrom();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getClockFramesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      clock_pb.ClockFrame.serializeBinaryToWriter
    );
  }
  f = message.getRandom_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional uint64 from = 1;
 * @return {number}
 */
proto.quilibrium.node.data.pb.FrameRebroadcast.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.quilibrium.node.data.pb.FrameRebroadcast} returns this
 */
proto.quilibrium.node.data.pb.FrameRebroadcast.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 to = 2;
 * @return {number}
 */
proto.quilibrium.node.data.pb.FrameRebroadcast.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.quilibrium.node.data.pb.FrameRebroadcast} returns this
 */
proto.quilibrium.node.data.pb.FrameRebroadcast.prototype.setTo = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated quilibrium.node.clock.pb.ClockFrame clock_frames = 3;
 * @return {!Array<!proto.quilibrium.node.clock.pb.ClockFrame>}
 */
proto.quilibrium.node.data.pb.FrameRebroadcast.prototype.getClockFramesList = function() {
  return /** @type{!Array<!proto.quilibrium.node.clock.pb.ClockFrame>} */ (
    jspb.Message.getRepeatedWrapperField(this, clock_pb.ClockFrame, 3));
};


/**
 * @param {!Array<!proto.quilibrium.node.clock.pb.ClockFrame>} value
 * @return {!proto.quilibrium.node.data.pb.FrameRebroadcast} returns this
*/
proto.quilibrium.node.data.pb.FrameRebroadcast.prototype.setClockFramesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.quilibrium.node.clock.pb.ClockFrame=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quilibrium.node.clock.pb.ClockFrame}
 */
proto.quilibrium.node.data.pb.FrameRebroadcast.prototype.addClockFrames = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.quilibrium.node.clock.pb.ClockFrame, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quilibrium.node.data.pb.FrameRebroadcast} returns this
 */
proto.quilibrium.node.data.pb.FrameRebroadcast.prototype.clearClockFramesList = function() {
  return this.setClockFramesList([]);
};


/**
 * optional bytes random = 4;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.data.pb.FrameRebroadcast.prototype.getRandom = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes random = 4;
 * This is a type-conversion wrapper around `getRandom()`
 * @return {string}
 */
proto.quilibrium.node.data.pb.FrameRebroadcast.prototype.getRandom_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRandom()));
};


/**
 * optional bytes random = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRandom()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.FrameRebroadcast.prototype.getRandom_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRandom()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.data.pb.FrameRebroadcast} returns this
 */
proto.quilibrium.node.data.pb.FrameRebroadcast.prototype.setRandom = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quilibrium.node.data.pb.ChallengeProofRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quilibrium.node.data.pb.ChallengeProofRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quilibrium.node.data.pb.ChallengeProofRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.ChallengeProofRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    peerId: msg.getPeerId_asB64(),
    clockFrame: (f = msg.getClockFrame()) && clock_pb.ClockFrame.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quilibrium.node.data.pb.ChallengeProofRequest}
 */
proto.quilibrium.node.data.pb.ChallengeProofRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quilibrium.node.data.pb.ChallengeProofRequest;
  return proto.quilibrium.node.data.pb.ChallengeProofRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quilibrium.node.data.pb.ChallengeProofRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quilibrium.node.data.pb.ChallengeProofRequest}
 */
proto.quilibrium.node.data.pb.ChallengeProofRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPeerId(value);
      break;
    case 3:
      var value = new clock_pb.ClockFrame;
      reader.readMessage(value,clock_pb.ClockFrame.deserializeBinaryFromReader);
      msg.setClockFrame(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.ChallengeProofRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quilibrium.node.data.pb.ChallengeProofRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quilibrium.node.data.pb.ChallengeProofRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.ChallengeProofRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeerId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getClockFrame();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      clock_pb.ClockFrame.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes peer_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.data.pb.ChallengeProofRequest.prototype.getPeerId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes peer_id = 1;
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {string}
 */
proto.quilibrium.node.data.pb.ChallengeProofRequest.prototype.getPeerId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPeerId()));
};


/**
 * optional bytes peer_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.ChallengeProofRequest.prototype.getPeerId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPeerId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.data.pb.ChallengeProofRequest} returns this
 */
proto.quilibrium.node.data.pb.ChallengeProofRequest.prototype.setPeerId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional quilibrium.node.clock.pb.ClockFrame clock_frame = 3;
 * @return {?proto.quilibrium.node.clock.pb.ClockFrame}
 */
proto.quilibrium.node.data.pb.ChallengeProofRequest.prototype.getClockFrame = function() {
  return /** @type{?proto.quilibrium.node.clock.pb.ClockFrame} */ (
    jspb.Message.getWrapperField(this, clock_pb.ClockFrame, 3));
};


/**
 * @param {?proto.quilibrium.node.clock.pb.ClockFrame|undefined} value
 * @return {!proto.quilibrium.node.data.pb.ChallengeProofRequest} returns this
*/
proto.quilibrium.node.data.pb.ChallengeProofRequest.prototype.setClockFrame = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quilibrium.node.data.pb.ChallengeProofRequest} returns this
 */
proto.quilibrium.node.data.pb.ChallengeProofRequest.prototype.clearClockFrame = function() {
  return this.setClockFrame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quilibrium.node.data.pb.ChallengeProofRequest.prototype.hasClockFrame = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quilibrium.node.data.pb.ChallengeProofResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quilibrium.node.data.pb.ChallengeProofResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quilibrium.node.data.pb.ChallengeProofResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.ChallengeProofResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    output: msg.getOutput_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quilibrium.node.data.pb.ChallengeProofResponse}
 */
proto.quilibrium.node.data.pb.ChallengeProofResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quilibrium.node.data.pb.ChallengeProofResponse;
  return proto.quilibrium.node.data.pb.ChallengeProofResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quilibrium.node.data.pb.ChallengeProofResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quilibrium.node.data.pb.ChallengeProofResponse}
 */
proto.quilibrium.node.data.pb.ChallengeProofResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOutput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.ChallengeProofResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quilibrium.node.data.pb.ChallengeProofResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quilibrium.node.data.pb.ChallengeProofResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.data.pb.ChallengeProofResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutput_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes output = 1;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.data.pb.ChallengeProofResponse.prototype.getOutput = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes output = 1;
 * This is a type-conversion wrapper around `getOutput()`
 * @return {string}
 */
proto.quilibrium.node.data.pb.ChallengeProofResponse.prototype.getOutput_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOutput()));
};


/**
 * optional bytes output = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOutput()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.data.pb.ChallengeProofResponse.prototype.getOutput_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOutput()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.data.pb.ChallengeProofResponse} returns this
 */
proto.quilibrium.node.data.pb.ChallengeProofResponse.prototype.setOutput = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


goog.object.extend(exports, proto.quilibrium.node.data.pb);
