// source: clock.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var channel_pb = require('./channel_pb.js');
goog.object.extend(proto, channel_pb);
var keys_pb = require('./keys_pb.js');
goog.object.extend(proto, keys_pb);
goog.exportSymbol('proto.quilibrium.node.clock.pb.ClockFrame', null, global);
goog.exportSymbol('proto.quilibrium.node.clock.pb.ClockFrame.PublicKeySignatureCase', null, global);
goog.exportSymbol('proto.quilibrium.node.clock.pb.ClockFrameParentSelectors', null, global);
goog.exportSymbol('proto.quilibrium.node.clock.pb.ClockFramesPreflight', null, global);
goog.exportSymbol('proto.quilibrium.node.clock.pb.ClockFramesRequest', null, global);
goog.exportSymbol('proto.quilibrium.node.clock.pb.ClockFramesResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quilibrium.node.clock.pb.ClockFrame = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quilibrium.node.clock.pb.ClockFrame.repeatedFields_, proto.quilibrium.node.clock.pb.ClockFrame.oneofGroups_);
};
goog.inherits(proto.quilibrium.node.clock.pb.ClockFrame, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quilibrium.node.clock.pb.ClockFrame.displayName = 'proto.quilibrium.node.clock.pb.ClockFrame';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quilibrium.node.clock.pb.ClockFrameParentSelectors = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quilibrium.node.clock.pb.ClockFrameParentSelectors, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quilibrium.node.clock.pb.ClockFrameParentSelectors.displayName = 'proto.quilibrium.node.clock.pb.ClockFrameParentSelectors';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quilibrium.node.clock.pb.ClockFramesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quilibrium.node.clock.pb.ClockFramesRequest.repeatedFields_, null);
};
goog.inherits(proto.quilibrium.node.clock.pb.ClockFramesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quilibrium.node.clock.pb.ClockFramesRequest.displayName = 'proto.quilibrium.node.clock.pb.ClockFramesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quilibrium.node.clock.pb.ClockFramesPreflight = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quilibrium.node.clock.pb.ClockFramesPreflight.repeatedFields_, null);
};
goog.inherits(proto.quilibrium.node.clock.pb.ClockFramesPreflight, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quilibrium.node.clock.pb.ClockFramesPreflight.displayName = 'proto.quilibrium.node.clock.pb.ClockFramesPreflight';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quilibrium.node.clock.pb.ClockFramesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quilibrium.node.clock.pb.ClockFramesResponse.repeatedFields_, null);
};
goog.inherits(proto.quilibrium.node.clock.pb.ClockFramesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quilibrium.node.clock.pb.ClockFramesResponse.displayName = 'proto.quilibrium.node.clock.pb.ClockFramesResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quilibrium.node.clock.pb.ClockFrame.repeatedFields_ = [8];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.quilibrium.node.clock.pb.ClockFrame.oneofGroups_ = [[9]];

/**
 * @enum {number}
 */
proto.quilibrium.node.clock.pb.ClockFrame.PublicKeySignatureCase = {
  PUBLIC_KEY_SIGNATURE_NOT_SET: 0,
  PUBLIC_KEY_SIGNATURE_ED448: 9
};

/**
 * @return {proto.quilibrium.node.clock.pb.ClockFrame.PublicKeySignatureCase}
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.getPublicKeySignatureCase = function() {
  return /** @type {proto.quilibrium.node.clock.pb.ClockFrame.PublicKeySignatureCase} */(jspb.Message.computeOneofCase(this, proto.quilibrium.node.clock.pb.ClockFrame.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.toObject = function(opt_includeInstance) {
  return proto.quilibrium.node.clock.pb.ClockFrame.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quilibrium.node.clock.pb.ClockFrame} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.clock.pb.ClockFrame.toObject = function(includeInstance, msg) {
  var f, obj = {
    filter: msg.getFilter_asB64(),
    frameNumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    difficulty: jspb.Message.getFieldWithDefault(msg, 4, 0),
    parentSelector: msg.getParentSelector_asB64(),
    input: msg.getInput_asB64(),
    output: msg.getOutput_asB64(),
    aggregateProofsList: jspb.Message.toObjectList(msg.getAggregateProofsList(),
    channel_pb.InclusionAggregateProof.toObject, includeInstance),
    publicKeySignatureEd448: (f = msg.getPublicKeySignatureEd448()) && keys_pb.Ed448Signature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quilibrium.node.clock.pb.ClockFrame}
 */
proto.quilibrium.node.clock.pb.ClockFrame.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quilibrium.node.clock.pb.ClockFrame;
  return proto.quilibrium.node.clock.pb.ClockFrame.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quilibrium.node.clock.pb.ClockFrame} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quilibrium.node.clock.pb.ClockFrame}
 */
proto.quilibrium.node.clock.pb.ClockFrame.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFilter(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFrameNumber(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDifficulty(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setParentSelector(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInput(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOutput(value);
      break;
    case 8:
      var value = new channel_pb.InclusionAggregateProof;
      reader.readMessage(value,channel_pb.InclusionAggregateProof.deserializeBinaryFromReader);
      msg.addAggregateProofs(value);
      break;
    case 9:
      var value = new keys_pb.Ed448Signature;
      reader.readMessage(value,keys_pb.Ed448Signature.deserializeBinaryFromReader);
      msg.setPublicKeySignatureEd448(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quilibrium.node.clock.pb.ClockFrame.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quilibrium.node.clock.pb.ClockFrame} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.clock.pb.ClockFrame.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilter_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getFrameNumber();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getDifficulty();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getParentSelector_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getInput_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getOutput_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getAggregateProofsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      channel_pb.InclusionAggregateProof.serializeBinaryToWriter
    );
  }
  f = message.getPublicKeySignatureEd448();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      keys_pb.Ed448Signature.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes filter = 1;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.getFilter = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes filter = 1;
 * This is a type-conversion wrapper around `getFilter()`
 * @return {string}
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.getFilter_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFilter()));
};


/**
 * optional bytes filter = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFilter()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.getFilter_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFilter()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.clock.pb.ClockFrame} returns this
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.setFilter = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint64 frame_number = 2;
 * @return {number}
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.getFrameNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.quilibrium.node.clock.pb.ClockFrame} returns this
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.setFrameNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 timestamp = 3;
 * @return {number}
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.quilibrium.node.clock.pb.ClockFrame} returns this
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 difficulty = 4;
 * @return {number}
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.getDifficulty = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.quilibrium.node.clock.pb.ClockFrame} returns this
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.setDifficulty = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bytes parent_selector = 5;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.getParentSelector = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes parent_selector = 5;
 * This is a type-conversion wrapper around `getParentSelector()`
 * @return {string}
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.getParentSelector_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getParentSelector()));
};


/**
 * optional bytes parent_selector = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getParentSelector()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.getParentSelector_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getParentSelector()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.clock.pb.ClockFrame} returns this
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.setParentSelector = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional bytes input = 6;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.getInput = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes input = 6;
 * This is a type-conversion wrapper around `getInput()`
 * @return {string}
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.getInput_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInput()));
};


/**
 * optional bytes input = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInput()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.getInput_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInput()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.clock.pb.ClockFrame} returns this
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.setInput = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional bytes output = 7;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.getOutput = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes output = 7;
 * This is a type-conversion wrapper around `getOutput()`
 * @return {string}
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.getOutput_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOutput()));
};


/**
 * optional bytes output = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOutput()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.getOutput_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOutput()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.clock.pb.ClockFrame} returns this
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.setOutput = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};


/**
 * repeated quilibrium.node.channel.pb.InclusionAggregateProof aggregate_proofs = 8;
 * @return {!Array<!proto.quilibrium.node.channel.pb.InclusionAggregateProof>}
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.getAggregateProofsList = function() {
  return /** @type{!Array<!proto.quilibrium.node.channel.pb.InclusionAggregateProof>} */ (
    jspb.Message.getRepeatedWrapperField(this, channel_pb.InclusionAggregateProof, 8));
};


/**
 * @param {!Array<!proto.quilibrium.node.channel.pb.InclusionAggregateProof>} value
 * @return {!proto.quilibrium.node.clock.pb.ClockFrame} returns this
*/
proto.quilibrium.node.clock.pb.ClockFrame.prototype.setAggregateProofsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.quilibrium.node.channel.pb.InclusionAggregateProof=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quilibrium.node.channel.pb.InclusionAggregateProof}
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.addAggregateProofs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.quilibrium.node.channel.pb.InclusionAggregateProof, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quilibrium.node.clock.pb.ClockFrame} returns this
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.clearAggregateProofsList = function() {
  return this.setAggregateProofsList([]);
};


/**
 * optional quilibrium.node.keys.pb.Ed448Signature public_key_signature_ed448 = 9;
 * @return {?proto.quilibrium.node.keys.pb.Ed448Signature}
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.getPublicKeySignatureEd448 = function() {
  return /** @type{?proto.quilibrium.node.keys.pb.Ed448Signature} */ (
    jspb.Message.getWrapperField(this, keys_pb.Ed448Signature, 9));
};


/**
 * @param {?proto.quilibrium.node.keys.pb.Ed448Signature|undefined} value
 * @return {!proto.quilibrium.node.clock.pb.ClockFrame} returns this
*/
proto.quilibrium.node.clock.pb.ClockFrame.prototype.setPublicKeySignatureEd448 = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.quilibrium.node.clock.pb.ClockFrame.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quilibrium.node.clock.pb.ClockFrame} returns this
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.clearPublicKeySignatureEd448 = function() {
  return this.setPublicKeySignatureEd448(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quilibrium.node.clock.pb.ClockFrame.prototype.hasPublicKeySignatureEd448 = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quilibrium.node.clock.pb.ClockFrameParentSelectors.prototype.toObject = function(opt_includeInstance) {
  return proto.quilibrium.node.clock.pb.ClockFrameParentSelectors.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quilibrium.node.clock.pb.ClockFrameParentSelectors} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.clock.pb.ClockFrameParentSelectors.toObject = function(includeInstance, msg) {
  var f, obj = {
    frameNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    parentSelector: msg.getParentSelector_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quilibrium.node.clock.pb.ClockFrameParentSelectors}
 */
proto.quilibrium.node.clock.pb.ClockFrameParentSelectors.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quilibrium.node.clock.pb.ClockFrameParentSelectors;
  return proto.quilibrium.node.clock.pb.ClockFrameParentSelectors.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quilibrium.node.clock.pb.ClockFrameParentSelectors} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quilibrium.node.clock.pb.ClockFrameParentSelectors}
 */
proto.quilibrium.node.clock.pb.ClockFrameParentSelectors.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFrameNumber(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setParentSelector(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quilibrium.node.clock.pb.ClockFrameParentSelectors.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quilibrium.node.clock.pb.ClockFrameParentSelectors.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quilibrium.node.clock.pb.ClockFrameParentSelectors} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.clock.pb.ClockFrameParentSelectors.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrameNumber();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getParentSelector_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional uint64 frame_number = 1;
 * @return {number}
 */
proto.quilibrium.node.clock.pb.ClockFrameParentSelectors.prototype.getFrameNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.quilibrium.node.clock.pb.ClockFrameParentSelectors} returns this
 */
proto.quilibrium.node.clock.pb.ClockFrameParentSelectors.prototype.setFrameNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes parent_selector = 2;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.clock.pb.ClockFrameParentSelectors.prototype.getParentSelector = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes parent_selector = 2;
 * This is a type-conversion wrapper around `getParentSelector()`
 * @return {string}
 */
proto.quilibrium.node.clock.pb.ClockFrameParentSelectors.prototype.getParentSelector_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getParentSelector()));
};


/**
 * optional bytes parent_selector = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getParentSelector()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.clock.pb.ClockFrameParentSelectors.prototype.getParentSelector_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getParentSelector()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.clock.pb.ClockFrameParentSelectors} returns this
 */
proto.quilibrium.node.clock.pb.ClockFrameParentSelectors.prototype.setParentSelector = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quilibrium.node.clock.pb.ClockFramesRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quilibrium.node.clock.pb.ClockFramesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quilibrium.node.clock.pb.ClockFramesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quilibrium.node.clock.pb.ClockFramesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.clock.pb.ClockFramesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    filter: msg.getFilter_asB64(),
    fromFrameNumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    toFrameNumber: jspb.Message.getFieldWithDefault(msg, 3, 0),
    parentSelector: msg.getParentSelector_asB64(),
    rangeParentSelectorsList: jspb.Message.toObjectList(msg.getRangeParentSelectorsList(),
    proto.quilibrium.node.clock.pb.ClockFrameParentSelectors.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quilibrium.node.clock.pb.ClockFramesRequest}
 */
proto.quilibrium.node.clock.pb.ClockFramesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quilibrium.node.clock.pb.ClockFramesRequest;
  return proto.quilibrium.node.clock.pb.ClockFramesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quilibrium.node.clock.pb.ClockFramesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quilibrium.node.clock.pb.ClockFramesRequest}
 */
proto.quilibrium.node.clock.pb.ClockFramesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFilter(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFromFrameNumber(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setToFrameNumber(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setParentSelector(value);
      break;
    case 5:
      var value = new proto.quilibrium.node.clock.pb.ClockFrameParentSelectors;
      reader.readMessage(value,proto.quilibrium.node.clock.pb.ClockFrameParentSelectors.deserializeBinaryFromReader);
      msg.addRangeParentSelectors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quilibrium.node.clock.pb.ClockFramesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quilibrium.node.clock.pb.ClockFramesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quilibrium.node.clock.pb.ClockFramesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.clock.pb.ClockFramesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilter_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getFromFrameNumber();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getToFrameNumber();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getParentSelector_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getRangeParentSelectorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.quilibrium.node.clock.pb.ClockFrameParentSelectors.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes filter = 1;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.clock.pb.ClockFramesRequest.prototype.getFilter = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes filter = 1;
 * This is a type-conversion wrapper around `getFilter()`
 * @return {string}
 */
proto.quilibrium.node.clock.pb.ClockFramesRequest.prototype.getFilter_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFilter()));
};


/**
 * optional bytes filter = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFilter()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.clock.pb.ClockFramesRequest.prototype.getFilter_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFilter()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.clock.pb.ClockFramesRequest} returns this
 */
proto.quilibrium.node.clock.pb.ClockFramesRequest.prototype.setFilter = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint64 from_frame_number = 2;
 * @return {number}
 */
proto.quilibrium.node.clock.pb.ClockFramesRequest.prototype.getFromFrameNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.quilibrium.node.clock.pb.ClockFramesRequest} returns this
 */
proto.quilibrium.node.clock.pb.ClockFramesRequest.prototype.setFromFrameNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 to_frame_number = 3;
 * @return {number}
 */
proto.quilibrium.node.clock.pb.ClockFramesRequest.prototype.getToFrameNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.quilibrium.node.clock.pb.ClockFramesRequest} returns this
 */
proto.quilibrium.node.clock.pb.ClockFramesRequest.prototype.setToFrameNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes parent_selector = 4;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.clock.pb.ClockFramesRequest.prototype.getParentSelector = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes parent_selector = 4;
 * This is a type-conversion wrapper around `getParentSelector()`
 * @return {string}
 */
proto.quilibrium.node.clock.pb.ClockFramesRequest.prototype.getParentSelector_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getParentSelector()));
};


/**
 * optional bytes parent_selector = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getParentSelector()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.clock.pb.ClockFramesRequest.prototype.getParentSelector_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getParentSelector()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.clock.pb.ClockFramesRequest} returns this
 */
proto.quilibrium.node.clock.pb.ClockFramesRequest.prototype.setParentSelector = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * repeated ClockFrameParentSelectors range_parent_selectors = 5;
 * @return {!Array<!proto.quilibrium.node.clock.pb.ClockFrameParentSelectors>}
 */
proto.quilibrium.node.clock.pb.ClockFramesRequest.prototype.getRangeParentSelectorsList = function() {
  return /** @type{!Array<!proto.quilibrium.node.clock.pb.ClockFrameParentSelectors>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quilibrium.node.clock.pb.ClockFrameParentSelectors, 5));
};


/**
 * @param {!Array<!proto.quilibrium.node.clock.pb.ClockFrameParentSelectors>} value
 * @return {!proto.quilibrium.node.clock.pb.ClockFramesRequest} returns this
*/
proto.quilibrium.node.clock.pb.ClockFramesRequest.prototype.setRangeParentSelectorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.quilibrium.node.clock.pb.ClockFrameParentSelectors=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quilibrium.node.clock.pb.ClockFrameParentSelectors}
 */
proto.quilibrium.node.clock.pb.ClockFramesRequest.prototype.addRangeParentSelectors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.quilibrium.node.clock.pb.ClockFrameParentSelectors, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quilibrium.node.clock.pb.ClockFramesRequest} returns this
 */
proto.quilibrium.node.clock.pb.ClockFramesRequest.prototype.clearRangeParentSelectorsList = function() {
  return this.setRangeParentSelectorsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quilibrium.node.clock.pb.ClockFramesPreflight.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quilibrium.node.clock.pb.ClockFramesPreflight.prototype.toObject = function(opt_includeInstance) {
  return proto.quilibrium.node.clock.pb.ClockFramesPreflight.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quilibrium.node.clock.pb.ClockFramesPreflight} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.clock.pb.ClockFramesPreflight.toObject = function(includeInstance, msg) {
  var f, obj = {
    rangeParentSelectorsList: jspb.Message.toObjectList(msg.getRangeParentSelectorsList(),
    proto.quilibrium.node.clock.pb.ClockFrameParentSelectors.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quilibrium.node.clock.pb.ClockFramesPreflight}
 */
proto.quilibrium.node.clock.pb.ClockFramesPreflight.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quilibrium.node.clock.pb.ClockFramesPreflight;
  return proto.quilibrium.node.clock.pb.ClockFramesPreflight.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quilibrium.node.clock.pb.ClockFramesPreflight} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quilibrium.node.clock.pb.ClockFramesPreflight}
 */
proto.quilibrium.node.clock.pb.ClockFramesPreflight.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quilibrium.node.clock.pb.ClockFrameParentSelectors;
      reader.readMessage(value,proto.quilibrium.node.clock.pb.ClockFrameParentSelectors.deserializeBinaryFromReader);
      msg.addRangeParentSelectors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quilibrium.node.clock.pb.ClockFramesPreflight.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quilibrium.node.clock.pb.ClockFramesPreflight.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quilibrium.node.clock.pb.ClockFramesPreflight} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.clock.pb.ClockFramesPreflight.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRangeParentSelectorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quilibrium.node.clock.pb.ClockFrameParentSelectors.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ClockFrameParentSelectors range_parent_selectors = 1;
 * @return {!Array<!proto.quilibrium.node.clock.pb.ClockFrameParentSelectors>}
 */
proto.quilibrium.node.clock.pb.ClockFramesPreflight.prototype.getRangeParentSelectorsList = function() {
  return /** @type{!Array<!proto.quilibrium.node.clock.pb.ClockFrameParentSelectors>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quilibrium.node.clock.pb.ClockFrameParentSelectors, 1));
};


/**
 * @param {!Array<!proto.quilibrium.node.clock.pb.ClockFrameParentSelectors>} value
 * @return {!proto.quilibrium.node.clock.pb.ClockFramesPreflight} returns this
*/
proto.quilibrium.node.clock.pb.ClockFramesPreflight.prototype.setRangeParentSelectorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quilibrium.node.clock.pb.ClockFrameParentSelectors=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quilibrium.node.clock.pb.ClockFrameParentSelectors}
 */
proto.quilibrium.node.clock.pb.ClockFramesPreflight.prototype.addRangeParentSelectors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quilibrium.node.clock.pb.ClockFrameParentSelectors, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quilibrium.node.clock.pb.ClockFramesPreflight} returns this
 */
proto.quilibrium.node.clock.pb.ClockFramesPreflight.prototype.clearRangeParentSelectorsList = function() {
  return this.setRangeParentSelectorsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quilibrium.node.clock.pb.ClockFramesResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quilibrium.node.clock.pb.ClockFramesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quilibrium.node.clock.pb.ClockFramesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quilibrium.node.clock.pb.ClockFramesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.clock.pb.ClockFramesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    filter: msg.getFilter_asB64(),
    fromFrameNumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    toFrameNumber: jspb.Message.getFieldWithDefault(msg, 3, 0),
    clockFramesList: jspb.Message.toObjectList(msg.getClockFramesList(),
    proto.quilibrium.node.clock.pb.ClockFrame.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quilibrium.node.clock.pb.ClockFramesResponse}
 */
proto.quilibrium.node.clock.pb.ClockFramesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quilibrium.node.clock.pb.ClockFramesResponse;
  return proto.quilibrium.node.clock.pb.ClockFramesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quilibrium.node.clock.pb.ClockFramesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quilibrium.node.clock.pb.ClockFramesResponse}
 */
proto.quilibrium.node.clock.pb.ClockFramesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFilter(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFromFrameNumber(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setToFrameNumber(value);
      break;
    case 4:
      var value = new proto.quilibrium.node.clock.pb.ClockFrame;
      reader.readMessage(value,proto.quilibrium.node.clock.pb.ClockFrame.deserializeBinaryFromReader);
      msg.addClockFrames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quilibrium.node.clock.pb.ClockFramesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quilibrium.node.clock.pb.ClockFramesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quilibrium.node.clock.pb.ClockFramesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quilibrium.node.clock.pb.ClockFramesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilter_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getFromFrameNumber();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getToFrameNumber();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getClockFramesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.quilibrium.node.clock.pb.ClockFrame.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes filter = 1;
 * @return {!(string|Uint8Array)}
 */
proto.quilibrium.node.clock.pb.ClockFramesResponse.prototype.getFilter = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes filter = 1;
 * This is a type-conversion wrapper around `getFilter()`
 * @return {string}
 */
proto.quilibrium.node.clock.pb.ClockFramesResponse.prototype.getFilter_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFilter()));
};


/**
 * optional bytes filter = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFilter()`
 * @return {!Uint8Array}
 */
proto.quilibrium.node.clock.pb.ClockFramesResponse.prototype.getFilter_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFilter()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.quilibrium.node.clock.pb.ClockFramesResponse} returns this
 */
proto.quilibrium.node.clock.pb.ClockFramesResponse.prototype.setFilter = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint64 from_frame_number = 2;
 * @return {number}
 */
proto.quilibrium.node.clock.pb.ClockFramesResponse.prototype.getFromFrameNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.quilibrium.node.clock.pb.ClockFramesResponse} returns this
 */
proto.quilibrium.node.clock.pb.ClockFramesResponse.prototype.setFromFrameNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 to_frame_number = 3;
 * @return {number}
 */
proto.quilibrium.node.clock.pb.ClockFramesResponse.prototype.getToFrameNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.quilibrium.node.clock.pb.ClockFramesResponse} returns this
 */
proto.quilibrium.node.clock.pb.ClockFramesResponse.prototype.setToFrameNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated ClockFrame clock_frames = 4;
 * @return {!Array<!proto.quilibrium.node.clock.pb.ClockFrame>}
 */
proto.quilibrium.node.clock.pb.ClockFramesResponse.prototype.getClockFramesList = function() {
  return /** @type{!Array<!proto.quilibrium.node.clock.pb.ClockFrame>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quilibrium.node.clock.pb.ClockFrame, 4));
};


/**
 * @param {!Array<!proto.quilibrium.node.clock.pb.ClockFrame>} value
 * @return {!proto.quilibrium.node.clock.pb.ClockFramesResponse} returns this
*/
proto.quilibrium.node.clock.pb.ClockFramesResponse.prototype.setClockFramesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.quilibrium.node.clock.pb.ClockFrame=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quilibrium.node.clock.pb.ClockFrame}
 */
proto.quilibrium.node.clock.pb.ClockFramesResponse.prototype.addClockFrames = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.quilibrium.node.clock.pb.ClockFrame, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quilibrium.node.clock.pb.ClockFramesResponse} returns this
 */
proto.quilibrium.node.clock.pb.ClockFramesResponse.prototype.clearClockFramesList = function() {
  return this.setClockFramesList([]);
};


goog.object.extend(exports, proto.quilibrium.node.clock.pb);
